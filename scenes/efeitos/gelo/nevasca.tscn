[gd_scene load_steps=24 format=2]

[ext_resource path="res://sprites/backgrounds_fases/neve/1.png" type="Texture" id=2]
[ext_resource path="res://sprites/backgrounds_fases/neve/12.png" type="Texture" id=3]
[ext_resource path="res://sprites/backgrounds_fases/neve/7.png" type="Texture" id=4]
[ext_resource path="res://sprites/backgrounds_fases/neve/14.png" type="Texture" id=5]
[ext_resource path="res://sprites/backgrounds_fases/neve/16.png" type="Texture" id=6]
[ext_resource path="res://sprites/backgrounds_fases/neve/18.png" type="Texture" id=7]
[ext_resource path="res://sprites/backgrounds_fases/neve/19.png" type="Texture" id=8]
[ext_resource path="res://sprites/backgrounds_fases/neve/20.png" type="Texture" id=9]
[ext_resource path="res://sprites/backgrounds_fases/neve/6.png" type="Texture" id=10]
[ext_resource path="res://sprites/backgrounds_fases/neve/5.png" type="Texture" id=11]
[ext_resource path="res://sprites/backgrounds_fases/neve/15.png" type="Texture" id=12]
[ext_resource path="res://sprites/backgrounds_fases/neve/11.png" type="Texture" id=13]
[ext_resource path="res://sprites/backgrounds_fases/neve/10.png" type="Texture" id=14]
[ext_resource path="res://sprites/backgrounds_fases/neve/2.png" type="Texture" id=15]
[ext_resource path="res://sprites/backgrounds_fases/neve/3.png" type="Texture" id=16]
[ext_resource path="res://sprites/backgrounds_fases/neve/4.png" type="Texture" id=17]
[ext_resource path="res://sprites/backgrounds_fases/neve/9.png" type="Texture" id=18]
[ext_resource path="res://sprites/backgrounds_fases/neve/13.png" type="Texture" id=19]
[ext_resource path="res://sprites/backgrounds_fases/neve/17.png" type="Texture" id=20]
[ext_resource path="res://sprites/backgrounds_fases/neve/8.png" type="Texture" id=21]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

//--- hatsuyuki ---
// by Catzpaw 2016
//
// Modified for Godot; original code can be found at http://www.glslsandbox.com/e#36547.0

//#extension GL_OES_standard_derivatives : enable

uniform vec2 resolution;

float snow(vec2 uv, float scale, float time)
{
    float w=smoothstep(1.0,0.0,-uv.y*(scale/10.0));if(w<.1)return 0.0;
    uv+=time/scale;uv.y+=time*2.0/scale;uv.x+=sin(uv.y+time*.5)/scale;
    uv*=scale;vec2 s=floor(uv),f=fract(uv),p;float k=3.0,d;
    p=.5+.35*sin(11.0*fract(sin((s+scale)*mat2(vec2(7,3),vec2(6,5)))*5.0))-f;d=length(p);k=min(d,k);
    k=smoothstep(0.0,k,sin(f.x+f.y)*0.01);
    return k*w;
}

void fragment( )
{
    vec2 uv=(FRAGCOORD.xy*2.0-resolution.xy)/min(resolution.x,resolution.y);
    vec3 finalColor=vec3(0);
    float c=smoothstep(1.0,0.3,clamp(uv.y*.3+.8,0.0,.75));
    c+=snow(uv,30.0,TIME)*.3;
    c+=snow(uv,20.0,TIME)*.5;
    c+=snow(uv,15.0,TIME)*.8;
    c+=snow(uv,10.0,TIME);
    c+=snow(uv,8.0,TIME);
    c+=snow(uv,6.0,TIME);
    c+=snow(uv,5.0,TIME);
    finalColor=(vec3(c));
    COLOR = vec4(finalColor,1.0);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/resolution = Vector2( 1280, 720 )

[sub_resource type="SpriteFrames" id=3]
animations = [ {
"frames": [ ExtResource( 2 ), ExtResource( 15 ), ExtResource( 16 ), ExtResource( 17 ), ExtResource( 11 ), ExtResource( 10 ), ExtResource( 4 ), ExtResource( 21 ), ExtResource( 18 ), ExtResource( 14 ), ExtResource( 13 ), ExtResource( 3 ), ExtResource( 19 ), ExtResource( 5 ), ExtResource( 12 ), ExtResource( 6 ), ExtResource( 20 ), ExtResource( 7 ), ExtResource( 8 ), ExtResource( 9 ) ],
"loop": true,
"name": "default",
"speed": 15.0
} ]

[node name="nevasca" type="Node2D"]
__meta__ = {
"_edit_lock_": true
}

[node name="ColorRect" type="ColorRect" parent="."]
visible = false
material = SubResource( 2 )
margin_left = 97.484
margin_top = 10.3755
margin_right = 690.484
margin_bottom = 349.375
__meta__ = {
"_edit_use_anchors_": false
}

[node name="neve" type="AnimatedSprite" parent="."]
position = Vector2( 236.979, 112.253 )
scale = Vector2( 2, 2 )
frames = SubResource( 3 )
frame = 3
playing = true
